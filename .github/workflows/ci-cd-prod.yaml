name: Tradebyte CICD Production

on:
  push:
    branches:
      - master

  workflow_dispatch:

jobs:
  build-app:
    name: Build Application
    runs-on: ubuntu-latest
    environment: PROD
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run tests
        run: python tests/test.py
  
  code-scanning:
    name: Static Code Scanning
    runs-on: ubuntu-latest
    needs: build-app
    permissions:
      actions: read
      contents: read
      security-events: write
    
    strategy:
      fail-fast: false
      matrix:
        language: [ 'python' ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2


  build-push-docker:
    name: Build & Push Docker
    runs-on: ubuntu-latest
    environment: PROD
    needs: build-app

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}  

      - name: Build Docker 
        run: docker build -t ${{secrets.CONTAINER_REGISTRY}}/tradebyte-challenge:prod ./$DIR

      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{secrets.CONTAINER_REGISTRY}}/tradebyte-challenge:prod'

          format: 'sarif'
          output: 'trivy-scan-result.sarif'
          limit-severities-for-sarif: true
          severity: 'CRITICAL,HIGH'
      
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-scan-result.sarif'

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: trivy-scan-result 
          path: trivy-scan-result.sarif


      - name: Docker Push
        run: docker push ${{secrets.CONTAINER_REGISTRY}}/tradebyte-challenge:prod

  
  deployment:
    name: Deployment
    runs-on: ubuntu-latest
    needs: build-push-docker
    environment: PROD
    env:
      SHA: ${{github.sha}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          envs: SHA
          port: 22
          script: | 
           sudo kubectl config use-context kind-tradebyte-prod
           mkdir "/tmp/$SHA" && cd "/tmp/$SHA"
           git clone https://github.com/amryassen96/tradebyte-DevOps-Challenge.git
           cd tradebyte-DevOps-Challenge/k8s/app
           yq yq -e -i '.data.ENVIRONMENT="PROD"' ./configmap.yaml
           kustomize edit set image amralaayassen/tradebyte-challenge=amralaayassen/tradebyte-challenge:prod && cd .. 
           kustomize build . | kubectl apply -f -

        